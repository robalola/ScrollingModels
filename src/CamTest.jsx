/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import {
  useGLTF,
  PerspectiveCamera,
  useAnimations,
  useScroll,
} from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function CamTest(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("./CamTest/CamTest.glb");
  const { actions } = useAnimations(animations, group);
  console.log(actions);
  const scroll = useScroll();

  useEffect(() => {
    actions["CameraTest"].play().paused = true;
  }, []);
  useFrame(
    () =>
      (actions["CameraTest"].time =
        actions["CameraTest"].getClip().duration * scroll.offset)
  );
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
        />
        <PerspectiveCamera
          name="Camera"
          makeDefault={true}
          far={1000}
          near={0.1}
          fov={53.702}
          position={[-4.952, 3.398, 11.089]}
          rotation={[-0.284, -0.407, -0.115]}
        />
        <mesh
          name="Plane"
          castShadow
          receiveShadow
          geometry={nodes.Plane.geometry}
          material={nodes.Plane.material}
          position={[0, -1.196, 0]}
          scale={4.48}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./CamTest/CamTest.glb");
